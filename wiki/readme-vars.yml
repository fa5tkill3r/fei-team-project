---

# project information
project_name: bookstack
project_url: "https://github.com/BookStackApp/BookStack"
project_logo: "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png"
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.

  Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore.

  For more information on BookStack visit their website and check it out: https://www.bookstackapp.com

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}

# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/data", desc: "this will store any uploaded data on the docker host" }
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London"}
  - { env_var: "APP_URL", env_value: "yourbaseurl", desc: "for specifying the IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`"}
  - { env_var: "DB_HOST", env_value: "yourdbhost", desc: "for specifying the database host" }
  - { env_var: "DB_PORT", env_value: "yourdbport", desc: "for specifying the database port if not default 3306" }
  - { env_var: "DB_USER", env_value: "yourdbuser", desc: "for specifying the database user" }
  - { env_var: "DB_PASS", env_value: "yourdbpass", desc: "for specifying the database password (minimum 4 characters & non-alphanumeric passwords must be properly escaped.)" }
  - { env_var: "DB_DATABASE", env_value: "bookstackapp", desc: "for specifying the database to be used" }

param_usage_include_ports: true
param_ports:
  - { external_port: "6875", internal_port: "80", port_desc: "will map the container's port 80 to port 6875 on the host" }

opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "QUEUE_CONNECTION", env_value: "", desc: "Set to `database` to enable async actions like sending email or triggering webhooks. See [documentation](https://www.bookstackapp.com/docs/admin/email-webhooks/#async-action-handling)." }

custom_compose: |
  ---
  version: "2"
  services:
    bookstack:
      image: lscr.io/linuxserver/bookstack
      container_name: bookstack
      environment:
        - PUID=1000
        - PGID=1000
        - APP_URL=https://bookstack.example.com
        - DB_HOST=bookstack_db
        - DB_PORT=3306
        - DB_USER=bookstack
        - DB_PASS=<yourdbpass>
        - DB_DATABASE=bookstackapp
      volumes:
        - ./bookstack_app_data:/config
      ports:
        - 6875:80
      restart: unless-stopped
      depends_on:
        - bookstack_db
    bookstack_db:
      image: lscr.io/linuxserver/mariadb
      container_name: bookstack_db
      environment:
        - PUID=1000
        - PGID=1000
        - MYSQL_ROOT_PASSWORD=<yourdbpass>
        - TZ=Europe/London
        - MYSQL_DATABASE=bookstackapp
        - MYSQL_USER=bookstack
        - MYSQL_PASSWORD=<yourdbpass>
      volumes:
        - ./bookstack_db_data:/config
      restart: unless-stopped

# application setup block
app_setup_block_enabled: true
app_setup_block: |

  The default username is admin@admin.com with the password of **password**, access the container at http://dockerhost:6875.

  This application is dependent on a MySQL database be it one you already have or a new one. If you do not already have one, set up our MariaDB container here https://hub.docker.com/r/linuxserver/mariadb/.


  If you intend to use this application behind a subfolder reverse proxy, such as our SWAG container or Traefik you will need to make sure that the `APP_URL` environment variable is set to your external domain, or it will not work.

  Documentation for BookStack can be found at https://www.bookstackapp.com/docs/.

  ### BookStack File & Directory Paths
  This container ensures certain BookStack application files & folders, such as user file upload folders, are retained within the `/config` folder so that they are persistent & accessible when the `/config` container path is bound as a volume. There may be cases, when following the BookStack documentation, that you'll need to know how these files and folders are used relative to a non-container BookStack installation.

  Below is a mapping of container `/config` paths to those relative within a BookStack install directory:

  - **/config container path** => **BookStack relative path**
  - `/config/www/.env` => `.env`
  - `/config/www/laravel.log` => `storage/logs/laravel.log`
  - `/config/www/backups/` => `storage/backups/`
  - `/config/www/files/` => `storage/uploads/files/`
  - `/config/www/images/` => `storage/uploads/images/`
  - `/config/www/themes/` => `themes/`
  - `/config/www/uploads/` => `public/uploads/`

  ### Advanced Users (full control over the .env file)
  If you wish to use the extra functionality of BookStack such as email, Memcache, LDAP and so on you will need to make your own .env file with guidance from the BookStack documentation.

  When you create the container, do not set any arguments for any SQL settings. The container will copy an exemplary .env file to /config/www/.env on your host system for you to edit.


# changelog
changelogs:
  - { date: "31.10.23:", desc: "Further sanitize sed replace." }
  - { date: "07.06.23:", desc: "Add mariadb-client for bookstack-system-cli support." }
  - { date: "25.05.23:", desc: "Rebase to Alpine 3.18, deprecate armhf." }
  - { date: "13.04.23:", desc: "Move ssl.conf include to default.conf." }
  - { date: "01.03.23:", desc: "Add php iconv." }
  - { date: "19.01.23:", desc: "Rebase to alpine 3.17 with php8.1." }
  - { date: "16.01.23:", desc: "Wrap `.env` values in quotes." }
  - { date: "05.01.23:", desc: "Fix db password setting (sed escape `&`)." }
  - { date: "21.12.22:", desc: "Update db info in .env file when env vars are updated." }
  - { date: "10.10.22:", desc: "Remove password escape logic which caused problems for a small subset of users." }
  - { date: "20.08.22:", desc: "Rebasing to alpine 3.15 with php8. Restructure nginx configs ([see changes announcement](https://info.linuxserver.io/issues/2022-08-20-nginx-base))." }
  - { date: "14.03.22:", desc: "Add symlinks for theme support." }
  - { date: "11.07.21:", desc: "Rebase to Alpine 3.14." }
  - { date: "12.01.21:", desc: "Remove unused requirement, as of release 0.31.0." }
  - { date: "17.12.20:", desc: "Make APP_URL var required (upstream changes)." }
  - { date: "17.09.20:", desc: "Rebase to alpine 3.12. Fix APP_URL setting. Bump php post max and upload max filesizes to 100MB by default." }
  - { date: "19.12.19:", desc: "Rebasing to alpine 3.11." }
  - { date: "26.07.19:", desc: "Use old version of tidyhtml pending upstream fixes." }
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "14.06.19:", desc: "Add wkhtmltopdf to image for PDF rendering." }
  - { date: "20.04.19:", desc: "Rebase to Alpine 3.9, add MySQL init logic." }
  - { date: "22.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "20.01.19:", desc: "Added php7-curl"}
  - { date: "04.11.18:", desc: "Added php7-ldap"}
  - { date: "15.10.18:", desc: "Changed functionality for advanced users"}
  - { date: "08.10.18:", desc: "Advanced mode, symlink changes, sed fixing, docs updated, added some composer files"}
  - { date: "23.09.28:", desc: "Updates pre-release"}
  - { date: "02.07.18:", desc: "Initial Release." }
