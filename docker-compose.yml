# TODO: move passwords to .env file or docker secrets

version: '3'
services:
  public-directus:
    image: directus/directus:10.8.1
    ports:
      - 8055:8055
    volumes:
      - ./public/directus/database:/directus/database
      - ./public/directus/uploads:/directus/uploads
    # TODO: change these
    environment:
      KEY: 'replace-with-random-value'
      SECRET: 'replace-with-random-value'
      ADMIN_EMAIL: 'admin@example.com'
      ADMIN_PASSWORD: 'd1r3ctu5'
      DB_CLIENT: 'sqlite3'
      DB_FILENAME: '/directus/database/data.db'
      WEBSOCKETS_ENABLED: 'true'
    # TODO: fix, takes too long for some reason
    healthcheck:
      test: "node -e \"const http = require('http'); const options = { hostname: 'localhost', port: 8055, path: '/server/health', method: 'GET', timeout: 1000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) { process.exit(0); } else { process.exit(1); } }); req.on('error', () => process.exit(1)); req.end();\""
      interval: 2m
      timeout: 1s
      retries: 5
      start_period: 30s
      start_interval: 1s
      
  public-api:
    build:
      context: ./public
    volumes:
      - ./public/dist:/app/dist
    depends_on:
      public-directus:
        condition: service_healthy
    environment:
      # CMS url
      API_URL: 'http://public-directus:8055'
      # private backend url
      PROXY_API_URL: 'http://nginx:8080'

  private-db:
    image: postgres:16
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'tp'
      POSTGRES_PASSWORD: 'tp'
      POSTGRES_DB: 'tp'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 50s
  private-backend:
    build:
      context: ./private/backend
    depends_on:
      private-db:
        condition: service_healthy
    environment:
      DB_HOST: private-db
      DB_PORT: 5432
      DB_CONNECTION: pgsql
      DB_DATABASE: tp
      DB_USERNAME: tp
      DB_PASSWORD: tp
  # TODO: setup frontend build container
  private-frontend:
    restart: no
    ports:
      - 3000:8081
    build:
      context: ./private/frontend
    volumes:
      - ./private/frontend/dist:/app/dist

  bookstack:
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    environment:
      - PUID=1000
      - PGID=1000
      - APP_URL=http://localhost/wiki
      - DB_HOST=bookstack_db
      - DB_PORT=3306
      - DB_USER=bookstack
      - DB_PASS=yourdbpass
      - DB_DATABASE=bookstackapp
    volumes:
      - ./wiki/bookstack_app_data:/config
    ports:
      - 8085:80
    restart: unless-stopped
    depends_on:
      - bookstack_db
  bookstack_db:
    image: lscr.io/linuxserver/mariadb
    container_name: bookstack_db
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=yourdbpass
      - TZ=Europe/London
      - MYSQL_DATABASE=bookstackapp
      - MYSQL_USER=bookstack
      - MYSQL_PASSWORD=yourdbpass
    volumes:
      - ./wiki/bookstack_db_data:/config/database
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - 8080:8080
      - 8090:8090
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./public/dist:/var/www/public:ro
      - ./private/backend/public:/var/www/private/public:ro
      - ./private/frontend/dist:/var/www/private/frontend:ro
    depends_on:
      - public-api
      - private-backend
      - private-frontend
